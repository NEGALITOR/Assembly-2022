     1                                  ; TAHA TAS
     2                                  ; Program 5 - Max Fibonacci
     3                                  ; 10/17/2022
     4                                  ; Finds the max fibonacci number that can fit in a double word and stores it
     5                                  
     6                                  SECTION .data
     7                                  ; define data/variables here.  Think DB, DW, DD, DQ
     8                                  
     9                                  SECTION .bss
    10                                  ; define uninitialized data here
    11 00000000 <res 00000004>          MaxFib:		RESD 1
    12 00000004 <res 00000002>          FibCount:	RESW 1
    13                                  
    14                                  
    15                                  SECTION .text
    16                                  global _main
    17                                  _main:
    18                                  
    19 00000000 B800000000              mov eax, 0
    20 00000005 BB01000000              mov ebx, 1
    21                                  
    22 0000000A 66FF05[04000000]        inc WORD[FibCount]
    23                                  
    24                                  startLoop:
    25                                  
    26 00000011 93                      xchg eax, ebx
    27 00000012 01C3                    add ebx, eax
    28 00000014 891D[00000000]          mov [MaxFib], ebx
    29 0000001A 7209                    jc endLoop
    30                                  
    31 0000001C 66FF05[04000000]        inc WORD[FibCount]
    32                                  
    33 00000023 EBEC                    jmp startLoop
    34                                  
    35                                  endLoop:
    36                                  
    37                                  lastBreak:
    38                                  ; Normal termination code
    39 00000025 B801000000              mov eax, 1
    40 0000002A BB00000000              mov ebx, 0
    41 0000002F CD80                    int 80h
